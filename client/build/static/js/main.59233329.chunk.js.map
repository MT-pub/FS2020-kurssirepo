{"version":3,"sources":["DrawQuestion.js","DrawTest.js","DoTests.js","EditTest.js","EditTests.js","Chart.js","LoginPage.js","App.js","reportWebVitals.js","index.js"],"names":["GreenCheckbox","withStyles","root","color","green","checked","props","Checkbox","DrawQuestion","testIndex","q","qIndex","answers","dispatch","Paper","text","map","a","aIndex","FormControlLabel","control","onChange","event","type","label","correct","drawAnswer","MemoizedDrawQuestion","React","memo","DrawTest","testData","questions","item","index","testid","id","Button","variant","onClick","payload","defaultMessage","description","name","DoTests","state","testButtons","useMemo","data","test","length","activeTest","kysymykset","className","EditTest","TextField","value","answer","IconButton","size","Icon","question","txt","EditTests","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","pieData","SubjectChart","width","height","options","scales","xAxes","stacked","yAxes","LoginPage","login","useState","username","setUserName","password","setPassword","defaultValue","e","target","file","src","sIOEndpoint","path","process","HEROKU","reducer","action","deepCopy","JSON","parse","stringify","push","splice","fetchData","token","Error","App","useReducer","saveData","showChart","useIntl","useSnackbar","enqueueSnackbar","fetchRemData","closeSnackbar","axios","get","headers","result","console","log","fetchTest","testId","saveTest","put","user","pw","preventDefault","post","email","response","uploadFile","formData","FormData","append","useEffect","socket","socketIOClient","extraHeaders","Authorization","on","emit","notification","message","disconnect","tenttiid","AppBar","position","Toolbar","component","Link","to","accept","multiple","onDrop","files","getRootProps","getInputProps","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","messages","language","navigator","split","ReactDOM","render","StrictMode","locale","maxSnack","anchorOrigin","horizontal","vertical","document","getElementById"],"mappings":"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","file":"static/js/main.59233329.chunk.js","sourcesContent":["import { Paper, Checkbox, FormControlLabel } from '@material-ui/core'\r\nimport { green } from '@material-ui/core/colors'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport React from 'react'\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport function DrawQuestion({ testIndex, q, qIndex, answers, dispatch }) {\r\n\r\n  const drawAnswer = (a, aIndex, qIndex) => {\r\n    return (\r\n      <div key={\"answer\" + testIndex + qIndex + aIndex}>\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              color={answers ? \"primary\" : \"secondary\"}\r\n              checked={a.checked}\r\n              onChange={answers ? null : (event) =>\r\n                dispatch({ type: \"changeAnswer\", event: event, qIndex: qIndex, aIndex: aIndex })\r\n              }\r\n            />\r\n          }\r\n          label={answers ? null : a.text}\r\n        />\r\n        {answers ?\r\n          <FormControlLabel\r\n            control={\r\n              <GreenCheckbox\r\n                checked={a.correct}\r\n              />\r\n            }\r\n            label={answers ? a.text : null} /> :\r\n          null}\r\n        <br />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (<Paper>\r\n    <div>\r\n      {q.text} <br />\r\n      {q.answers.map((a, aIndex) => {\r\n        return (drawAnswer(a, aIndex, qIndex))\r\n      })}\r\n    </div>\r\n  </Paper>)\r\n\r\n}\r\n\r\nexport const MemoizedDrawQuestion = React.memo(DrawQuestion)","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport {MemoizedDrawQuestion} from './DrawQuestion'\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nfunction DrawTest({ testData, testIndex, answers, dispatch }) {\r\n\r\n//console.log(testData)\r\n\r\n  if (testIndex !== \"\" && testData.questions) {\r\n    //console.log(props.test.test)\r\n    return (\r\n      <>\r\n        {testData.questions.map((item, index) => {\r\n          return (<MemoizedDrawQuestion key={\"question\" + testData.testid + item.id} q={item} qIndex={index} testData={testData} testIndex={testIndex} answers={answers} dispatch={dispatch} />);\r\n        })}\r\n        {answers ? null : <div>\r\n          <Button key={testData.name + \" showAnswers\"}\r\n            variant=\"contained\"\r\n            color=\"primary\" onClick={() => { dispatch({type:\"setAnswers\", payload:true}) }}>\r\n            <FormattedMessage id=\"app.show-answers-button\" defaultMessage=\"Show answers\" description=\"Tests-button on AppBar\"/>\r\n          </Button>\r\n        </div>}\r\n      </>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default DrawTest;","import React, { useMemo } from 'react'\r\nimport './App.css'\r\nimport { Button } from '@material-ui/core'\r\nimport DrawTest from './DrawTest'\r\n\r\nfunction DoTests({ state, dispatch }) {\r\n\r\n  const testButtons = useMemo(() => {\r\n    if (state.data !== []) {\r\n      return (state.data.map((item, index) =>\r\n        <Button key={\"\" + state.data[index].id + state.data[index].name}\r\n          color=\"primary\" onClick={() => {\r\n            dispatch({ type: \"setTest\", test: index });\r\n            dispatch({ type: \"setAnswers\", payload: false });\r\n          }}\r\n        >\r\n          {item.name}\r\n        </Button>\r\n      ))\r\n    }\r\n  }, [state.data, dispatch])\r\n\r\n  //console.log(state.data)\r\n  if (state.data.length && state.activeTest !== '' && state.data[state.activeTest].kysymykset !== []) {\r\n    return (\r\n      <div className=\"page\">\r\n        <div>\r\n          {testButtons}\r\n        </div>\r\n        {/* <img src='./selma_pieni2.8d5eb9aa.png' className='App-logo'></img> */}\r\n        <div className=\"test\">\r\n          <DrawTest testData={state.data[state.activeTest]} dispatch={dispatch}\r\n            answers={state.answers} testIndex={state.activeTest} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div>\r\n        {testButtons}\r\n      </div>\r\n    </div>)\r\n}\r\n\r\nexport default DoTests;\r\n","import { Paper, Checkbox, TextField, IconButton, Icon } from '@material-ui/core'\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\nfunction EditTest({ testData, testIndex, dispatch }) {\r\n  const drawQuestion = (q, qIndex) => {\r\n    return (\r\n      <Paper key={\"question\" + testIndex + qIndex}\r\n        className=\"questionCard\">\r\n        <div>\r\n          <TextField\r\n            className=\"questionItem\"\r\n            value={q.question}\r\n            onChange={(event) =>\r\n              dispatch({ type: \"handleQuestion\", event: event, qIndex: qIndex })}\r\n            variant=\"outlined\" />\r\n          <IconButton size=\"medium\"\r\n            onClick={() =>\r\n              dispatch({ type: \"removeQuestion\", qIndex: qIndex })}>\r\n            <Icon>delete</Icon>\r\n          </IconButton>\r\n          <br />\r\n          {q.answers.map((item, index) => {\r\n            return (drawAnswer(item, index, qIndex))\r\n          })}\r\n          <br />\r\n          <IconButton size=\"medium\"\r\n            className=\"answer\"\r\n            onClick={() =>\r\n              dispatch({ type: \"addAnswer\", qIndex: qIndex })}>\r\n            <Icon>add-circle</Icon>\r\n            <span>&nbsp;Lisää vastaus</span>\r\n          </IconButton>\r\n        </div>\r\n      </Paper>)\r\n  }\r\n\r\n  const drawAnswer = (a, aIndex, qIndex) => {\r\n    return (\r\n      <div key={\"answer\" + testIndex + qIndex + aIndex}>\r\n        <Checkbox\r\n          color={\"secondary\"}\r\n          checked={a.correct}\r\n          onChange={(event) =>\r\n            dispatch({ type: \"handleCheckbox\", event: event, qIndex: qIndex, aIndex: aIndex })}\r\n        />\r\n        <TextField\r\n          className=\"answerItem\"\r\n          value={a.answer}\r\n          onChange={(event) =>\r\n            dispatch({ type: \"handleAnswer\", event: event, qIndex: qIndex, aIndex: aIndex })}\r\n          variant=\"outlined\" />\r\n        <IconButton size=\"medium\"\r\n          onClick={() =>\r\n            dispatch({ type: \"removeAnswer\", qIndex: qIndex, aIndex: aIndex })}>\r\n          <Icon>delete</Icon>\r\n        </IconButton>\r\n        <br />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /* console.log(\"testData: \",testData)\r\n  console.log(\"testIndex: \",testIndex) */\r\n  if (testIndex !== \"\") {\r\n    //console.log(testData.test)\r\n    return (\r\n      <>\r\n        <TextField\r\n          className=\"questionItem\"\r\n          value={testData.test}\r\n          onChange={(event) =>\r\n            dispatch({ type: \"handleTest\", event: event })}\r\n          variant=\"outlined\" />\r\n        <IconButton size=\"medium\"\r\n          onClick={() =>\r\n            dispatch({ type: \"removeTest\" })}>\r\n          <Icon>delete</Icon>\r\n        </IconButton>\r\n        {testData.questions.map((item, index) => {\r\n          return (drawQuestion(item, index));\r\n        })}\r\n        <IconButton size=\"medium\"\r\n          className=\"answer\"\r\n          onClick={() =>\r\n            dispatch({ type: \"addQuestion\" })}>\r\n          <Icon>add-circle</Icon>\r\n          <FormattedMessage id=\"app.add-question-button\" description=\"Tests-button on AppBar\">\r\n            {txt => <span>&nbsp;{txt}</span>}\r\n            </FormattedMessage>\r\n        </IconButton>\r\n      </>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default EditTest;","import React from 'react'\r\nimport './App.css'\r\nimport { Button, Icon, IconButton } from '@material-ui/core'\r\nimport EditTest from './EditTest'\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\n\r\nfunction EditTests({ state, dispatch }) {\r\n\r\n  const testButtons = () => {\r\n    if (state.data !== []) {\r\n      return (\r\n        <>\r\n          {state.data.map((item, index) =>\r\n            <Button key={\"\" + index + state.data[index].test}\r\n              color=\"primary\" onClick={() => { dispatch({ type: \"setTest\", test: index }) }}>\r\n              {item.name}\r\n            </Button>)}\r\n          <IconButton size=\"medium\"\r\n            className=\"answer\"\r\n            onClick={() => dispatch({ type: \"addTest\" })}>\r\n            <Icon>add-circle</Icon>\r\n            <FormattedMessage id=\"app.add-test-button\" description=\"Tests-button on AppBar\">\r\n              {txt => <span>&nbsp;{txt}</span>}\r\n            </FormattedMessage>\r\n          </IconButton>\r\n        </>\r\n      )\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {testButtons()}\r\n      </div>\r\n      {/* <img src='./selma_pieni2.8d5eb9aa.png' className='App-logo'></img> */}\r\n      <div className=\"test\">\r\n        <EditTest testData={state.data[state.activeTest]}\r\n          testIndex={state.activeTest}\r\n          dispatch={dispatch} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditTests;\r\n","import React from 'react';\r\nimport { Bar, Pie } from 'react-chartjs-2';\r\n\r\nconst data = {\r\n  labels: ['Matematiikka', 'Biologia', 'Historia', 'Yhteenlasku', '2. Maailmansota', 'Äidinkieli', 'Englanti'],\r\n  datasets: [\r\n    {\r\n      label: 'Oikein',\r\n      backgroundColor: 'rgba(99,255,132,0.2)',\r\n      borderColor: 'rgba(99,255,132,1)',\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: 'rgba(99,255,132,0.4)',\r\n      hoverBorderColor: 'rgba(99,255,132,1)',\r\n      data: [65, 3, 20, 81, 56, 55, 40]\r\n    },\r\n    {\r\n      label: 'Väärin',\r\n      backgroundColor: 'rgba(255,99,132,0.2)',\r\n      borderColor: 'rgba(255,99,132,1)',\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n      hoverBorderColor: 'rgba(255,99,132,1)',\r\n      data: [20, 59, 40, 2, 56, 55, 40]\r\n    }\r\n  ]\r\n};\r\n\r\nconst pieData = {\r\n  labels: ['Matematiikka', 'Biologia', 'Historia', 'Yhteenlasku', '2. Maailmansota', 'Äidinkieli', 'Englanti'\r\n  ],\r\n  datasets: [{\r\n    data: [20, 59, 40, 2, 56, 55, 40],\r\n    backgroundColor: [\r\n      '#FF6384',\r\n      '#36A2EB',\r\n      '#FFCE56',\r\n      '#FF6384',\r\n      '#36A2EB',\r\n      '#FFCE56',\r\n      '#36A2EB'\r\n    ],\r\n    hoverBackgroundColor: [\r\n      '#FF6384',\r\n      '#36A2EB',\r\n      '#FFCE56',\r\n      '#FF6384',\r\n      '#36A2EB',\r\n      '#FFCE56',\r\n      '#36A2EB'\r\n    ]\r\n  }]\r\n};\r\n\r\nfunction SubjectChart() {\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>Pylväsdiagrammi esimerkki</h2>\r\n        <Bar\r\n          data={data}\r\n          width={100}\r\n          height={50}\r\n          options={{\r\n            scales: {\r\n              xAxes: [{\r\n                stacked: true\r\n              }],\r\n              yAxes: [{\r\n                stacked: true\r\n              }]\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <h2>Väärien vastauksien määrä</h2>\r\n        <Pie data={pieData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubjectChart","import { TextField, Button } from '@material-ui/core'\r\nimport { FormattedMessage } from 'react-intl';\r\nimport {useState} from 'react'\r\n\r\n\r\nfunction LoginPage({ state, login }) {\r\n\r\n  const [username, setUserName] = useState(\"miika@tolonen.fi\");\r\n  const [password, setPassword] = useState(\"salainensana\");\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <span>\r\n          Käyttäjänimi:<br />\r\n        </span>\r\n        <TextField\r\n          defaultValue=\"miika@tolonen.fi\"\r\n          onChange={e => setUserName(e.target.value)}\r\n          variant=\"outlined\" />\r\n        <span>\r\n          Salasana:\r\n      </span>\r\n        <TextField\r\n          defaultValue=\"salainensana\"\r\n          onChange={e => setPassword(e.target.value)}\r\n          type=\"password\"\r\n          variant=\"outlined\" />\r\n        <Button key={\"Login-Button\"}\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\" onClick={(e) => { login(e, username, password) }}>\r\n          <FormattedMessage id=\"app.login-button\" defaultMessage=\"Kirjaudu\" description=\"Tests-button on AppBar\" />\r\n        </Button>\r\n      </form>\r\n      {state.file === 1 ? <img src=\"http://localhost:4000/static/testfile.jpeg\" /> : null}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default LoginPage","import React, { useReducer, useEffect } from 'react'\r\nimport './App.css'\r\nimport { Button, AppBar, Toolbar } from '@material-ui/core'\r\nimport { useSnackbar } from 'notistack'\r\nimport axios from 'axios'\r\nimport DoTests from './DoTests'\r\nimport EditTests from './EditTests'\r\nimport SubjectChart from './Chart'\r\nimport LoginPage from './LoginPage'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\nimport Dropzone from 'react-dropzone'\r\nimport socketIOClient from 'socket.io-client'\r\nimport { borderRight } from '@material-ui/system'\r\n\r\n\r\nvar sIOEndpoint = null\r\nvar path = null\r\n\r\n\r\nif (process.env.HEROKU) {\r\n  path = 'https://fs2020-tentti.herokuapp.com/'\r\n  sIOEndpoint = \"http://fs2020-tentti.herokuapp.com/\"\r\n} else {\r\n  switch (process.env.NODE_ENV) {\r\n    case 'production':\r\n      path = 'http://localhost:4000/'\r\n      sIOEndpoint = 'http://localhost:4000'\r\n      break\r\n    case 'development':\r\n      path = 'http://localhost:4000/'\r\n      sIOEndpoint = 'http://localhost:4000'\r\n      break\r\n    case 'test':\r\n      path = 'http://localhost:4000/'\r\n      sIOEndpoint = 'http://localhost:4000'\r\n      break\r\n    default:\r\n      throw \"Environment not properly set!\"\r\n  }\r\n}\r\n\r\nconst initialData = [{\r\n  id: 1,\r\n  name: \"Elektroniikka\",\r\n  questions: [{\r\n    text: \"Mikä seuraavista on Ohmin laki?\",\r\n    answers: [{ text: \"U = R * I\", checked: false, correct: true },\r\n    { text: \"U = R / I\", checked: false, correct: false },\r\n    { text: \"U = R^2 * I\", checked: false, correct: false },\r\n    { text: \"U = R / I^2\", checked: false, correct: false }]\r\n  },\r\n  {\r\n    text: \"Mikä on Kirchhoffin virtalaki?\",\r\n    answers: [{ text: \"Sähkövirtaa tulee pisteeseen yhtä monta reittiä, kuin sitä kyseisestä pisteestä poistuu\", checked: false, correct: false },\r\n    { text: \"Sähkövirta tulee pisteeseen samansuuntaisena, kuin se kyseisestä pisteestä poistuu\", checked: false, correct: false },\r\n    { text: \"Sähkövirta tulee pisteeseen vastakkaiselta suunnalta, kuin se kyseisestä pisteestä poistuu\", checked: false, correct: false },\r\n    { text: \"Sähkövirtaa tulee pisteeseen yhtä paljon, kuin sitä kyseisestä pisteestä poistuu\", checked: false, correct: true }]\r\n  }]\r\n},\r\n{\r\n  id: 2,\r\n  name: \"Matematiikka\",\r\n  questions: [{\r\n    text: \"Kuinka paljon on 1 + 1?\",\r\n    answers: [{ text: \"4\", checked: false, correct: false },\r\n    { text: \"3\", checked: false, correct: false },\r\n    { text: \"2\", checked: false, correct: true },\r\n    { text: \"1\", checked: false, correct: false }]\r\n  },\r\n  {\r\n    text: \"Kuinka paljon on 12345 + 54321?\",\r\n    answers: [{ text: \"1234554321\", checked: false, correct: false },\r\n    { text: \"123454321\", checked: false, correct: false },\r\n    { text: \"66666\", checked: false, correct: true },\r\n    { text: \"55555\", checked: false, correct: false }]\r\n  }]\r\n}];\r\n\r\nfunction reducer(state, action) {\r\n  let deepCopy = JSON.parse(JSON.stringify(state));\r\n\r\n  //console.log(deepCopy)\r\n  switch (action.type) {\r\n    case 'handleCheckbox':\r\n      deepCopy.data[deepCopy.activeTest]\r\n        .questions[action.qIndex]\r\n        .answers[action.aIndex].correct = action.event.target.checked\r\n      return deepCopy\r\n    case 'handleTest':\r\n      deepCopy.data[deepCopy.activeTest].test = action.event.target.value\r\n      return deepCopy\r\n    case 'handleQuestion':\r\n      deepCopy.data[deepCopy.activeTest]\r\n        .questions[action.qIndex].text = action.event.target.value\r\n      return deepCopy\r\n    case 'handleAnswer':\r\n      deepCopy.data[deepCopy.activeTest]\r\n        .questions[action.qIndex]\r\n        .answers[action.aIndex].answer = action.event.target.value\r\n      return deepCopy\r\n    case 'addTest':\r\n      let emptyTest = {\r\n        test: \"test\",\r\n        questions: []\r\n      }\r\n      deepCopy.data.push(emptyTest)\r\n      return deepCopy\r\n    case 'addQuestion':\r\n      let emptyQuestion = {\r\n        text: \"text\",\r\n        answers: []\r\n      }\r\n      deepCopy.data[deepCopy.activeTest]\r\n        .questions.push(emptyQuestion)\r\n      return deepCopy\r\n    case 'addAnswer':\r\n      let emptyAnswer = {\r\n        answer: \"answer\",\r\n        checked: false,\r\n        correct: false\r\n      }\r\n      deepCopy.data[deepCopy.activeTest]\r\n        .questions[action.qIndex]\r\n        .answers.push(emptyAnswer)\r\n      return deepCopy\r\n    case 'changeAnswer':\r\n      deepCopy.data[state.activeTest]\r\n        .questions[action.qIndex]\r\n        .answers[action.aIndex].checked = action.event.target.checked\r\n      return deepCopy\r\n    case 'removeTest':\r\n      deepCopy.data.splice(deepCopy.activeTest, 1)\r\n      deepCopy.activeTest = \"\"\r\n      return deepCopy\r\n    case 'removeQuestion':\r\n      deepCopy.data[deepCopy.activeTest]\r\n        .questions.splice(action.qIndex, 1)\r\n      return deepCopy\r\n    case 'removeAnswer':\r\n      deepCopy.data[deepCopy.activeTest]\r\n        .questions[action.qIndex]\r\n        .answers.splice(action.aIndex, 1)\r\n      return deepCopy\r\n    case 'setFetchData':\r\n      deepCopy.fetchData = action.fetchData\r\n      return deepCopy\r\n    case 'setSaveData':\r\n      deepCopy.fetchData = action.fetchData\r\n      return deepCopy\r\n    case 'setTest':\r\n      deepCopy.activeTest = action.test\r\n      /* if(deepCopy.data[deepCopy.activeTest].questions === []){\r\n        fetchTest(state.data[state.activeTest].id)\r\n      } */\r\n      //console.log(deepCopy.test)\r\n      return deepCopy\r\n    case 'setToken':\r\n      deepCopy.token = action.payload\r\n      return deepCopy\r\n    case 'setAnswers':\r\n      deepCopy.answers = action.payload\r\n      return deepCopy\r\n    case 'fileAccepted':\r\n      deepCopy.file = 1\r\n      return deepCopy\r\n    case 'INIT_LIST':\r\n      deepCopy.fetchData = action.fetchData\r\n      deepCopy.data = action.data\r\n      return deepCopy\r\n    case 'INIT_TEST':\r\n      deepCopy.data[deepCopy.activeTest].questions = action.data\r\n      return deepCopy\r\n    default:\r\n      throw new Error('No action specified')\r\n  }\r\n}\r\n\r\nfunction App() {\r\n\r\n  const [state, dispatch] = useReducer(reducer, { file: 0, token: 0, data: [], activeTest: \"\", fetchData: true, saveData: false, answers: false, showChart: false, });\r\n  const intl = useIntl()\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\r\n\r\n  const createRemData = async () => {\r\n    try {\r\n      await axios.post(path + \"tests\", initialData, { headers: { Authorization: 'Bearer ' + state.token } })\r\n      dispatch({ type: \"INIT_LIST\", data: initialData, fetchData: false })\r\n    }\r\n    catch (exception) {\r\n      alert(intl.formatMessage({ id: 'error.db-no-fetch' }))//\"Tietokannan alustaminen epäonnistui\")\r\n    }\r\n  };\r\n\r\n  const fetchRemData = async () => {\r\n    try {\r\n      let result = await axios.get(path + \"tenttilista/\" + \"1\", { headers: { 'Authorization': 'Bearer ' + state.token } })\r\n      //console.log(result)\r\n      if (result.data.length > 0) {\r\n        //console.log(\"fetchIf\")\r\n        dispatch({ type: \"INIT_LIST\", data: result.data, fetchData: false })\r\n      } else {\r\n        throw new Error(\"Ei dataa.. luodaan..\")\r\n\r\n      }\r\n    }\r\n    catch (exception) {\r\n      console.log(exception)\r\n      //createRemData()\r\n    }\r\n  };\r\n\r\n  const fetchTest = async (testId) => {\r\n    try {\r\n      console.log(\"GET \" + path + \"tentti/\" + testId)\r\n      let result = await axios.get(path + \"tentti/\" + testId, { headers: { 'Authorization': 'Bearer ' + state.token } })\r\n      //console.log(result)\r\n      if (result.data.length > 0) {\r\n        //console.log(\"fetchIf\")\r\n        dispatch({ type: \"INIT_TEST\", data: result.data })\r\n      } else {\r\n        throw new Error(\"Tentin hakemisessa tapahtui virhe\")\r\n      }\r\n    }\r\n    catch (exception) {\r\n      console.log(exception)\r\n    }\r\n  };\r\n\r\n  const saveTest = async () => {\r\n    try {\r\n      await axios.put(path + \"tentit\", state.data[state.activeTest], { headers: { 'Authorization': 'Bearer ' + state.token } })\r\n    }\r\n    catch (exception) {\r\n      console.log(\"Datan päivitys ei onnistunut \", exception)\r\n    }\r\n  };\r\n\r\n  const login = async (e, user, pw) => {\r\n\r\n    //tämä estää napinpainallusta päivittämästä sivua\r\n    e.preventDefault()\r\n\r\n    try {\r\n      let response = await axios.post(path + \"login\", { email: user, password: pw })\r\n\r\n      console.log(response.data)\r\n\r\n      dispatch({ type: \"setToken\", payload: response.data })\r\n\r\n      return\r\n      //dispatch({type: \"setToken\"})\r\n    }\r\n    catch (exception) {\r\n      console.log(\"Kirjautuminen ei onnistunut \", exception)\r\n    }\r\n  }\r\n\r\n  const uploadFile = async (file) => {\r\n    let formData = new FormData()\r\n\r\n    formData.append(\"file\", file[0])\r\n\r\n    console.log(\"post kuva\")\r\n    try {\r\n      let result = await axios.post(path + \"upload\", formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'Authorization': 'Bearer ' + state.token\r\n        }\r\n      })\r\n      //console.log(result)\r\n      if (result.data == 'Tiedosto vastaanotettu') {\r\n        console.log(\"fileAccepted\")\r\n        dispatch({ type: \"fileAccepted\" })\r\n      } else {\r\n        throw new Error(\"Tiedostoa ei voitu ladata\")\r\n\r\n      }\r\n    }\r\n    catch (exception) {\r\n      console.log(exception)\r\n      //createRemData()\r\n    }\r\n  }\r\n\r\n  //endpoint: 'ws://localhost:9000'\r\n  useEffect(() => {\r\n    if(state.token !== 0) {const socket = socketIOClient(sIOEndpoint, {\r\n      extraHeaders: {\r\n        Authorization: \"Bearer \"+state.token\r\n    }})\r\n    socket.on('connected', function (data) {\r\n      //console.log(\"Socket.io: Connected\")\r\n      enqueueSnackbar(\"Socket.io: Connected\")\r\n      socket.emit('ready for data', {});\r\n    });\r\n    socket.on('update', function (data) {\r\n      let notification = JSON.parse(data.message.payload)\r\n\r\n      console.log(notification)\r\n\r\n      if (notification.type === \"insert test\")\r\n        enqueueSnackbar(\"Uusi tentti luotu tietokantaan\")\r\n      else if (notification.type === \"update test\")\r\n        enqueueSnackbar(\"Tenttiä \")\r\n      //console.log(data.message.payload);\r\n\r\n      // CLEAN UP THE EFFECT\r\n      return () => socket.disconnect()\r\n    })}\r\n  }, [state.token])\r\n\r\n  useEffect(() => {\r\n    //console.log(\"Haetaan tenttilistaa\")\r\n    if (state.token !== 0) {\r\n      fetchRemData()\r\n    }\r\n  }, [state.token])\r\n\r\n  useEffect(() => {\r\n    console.log(\"Tallennetaan\")\r\n    saveTest()\r\n  }, [state.saveData])\r\n\r\n  useEffect(() => {\r\n    if (state.data.length && !state.data[state.activeTest].questions.length) {\r\n      console.log(\"Haetaan dataa\")\r\n      fetchTest(state.data[state.activeTest].tenttiid)\r\n    }\r\n  }, [state.activeTest])\r\n\r\n  //console.log(state.data)\r\n\r\n  return (\r\n\r\n    <Router>\r\n      <div className=\"App\">\r\n        <AppBar position=\"static\" color=\"primary\">\r\n          <Toolbar>\r\n            <Button component={Link} to=\"/\">\r\n              <FormattedMessage id=\"app.tests-button\" defaultMessage=\"Tests\" description=\"Tests-button on AppBar\" />\r\n            </Button>\r\n            <Button component={Link} to=\"/kuvaajat\">\r\n              <FormattedMessage id=\"app.graphs-button\" defaultMessage=\"Graphs\" description=\"Tests-button on AppBar\" />\r\n            </Button>\r\n            <Button component={Link} to=\"/hallinta\">\r\n              <FormattedMessage id=\"app.control-button\" defaultMessage=\"Control\" description=\"Tests-button on AppBar\" />\r\n            </Button>\r\n            {state.token === 0 ?\r\n              <Button component={Link} to=\"/login\">\r\n                <FormattedMessage id=\"app.login-button\" defaultMessage=\"Login\" description=\"Tests-button on AppBar\" />\r\n              </Button> :\r\n              <Button component={Link} to=\"/login\">\r\n                <FormattedMessage id=\"app.logout-button\" defaultMessage=\"Logout\" description=\"Tests-button on AppBar\" />\r\n              </Button>}\r\n            <div>\r\n              <Dropzone accept='image/jpeg' multiple={false} onDrop={files => {\r\n                console.log(files)\r\n                uploadFile(files)\r\n              }}>\r\n                {({ getRootProps, getInputProps }) => (\r\n                  <section>\r\n                    <div {...getRootProps()}>\r\n                      <input {...getInputProps()} />\r\n                      <p>Vedä tiedosto tähän tai klikkaa valitaksesi tiedoston</p>\r\n                    </div>\r\n                  </section>\r\n                )}\r\n              </Dropzone>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className=\"page\">\r\n          <Switch>\r\n            <Route path=\"/kuvaajat\">\r\n              <SubjectChart />\r\n            </Route>\r\n            <Route path=\"/hallinta\">\r\n              <EditTests state={state} dispatch={dispatch} />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <DoTests state={state} dispatch={dispatch} />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <LoginPage state={state} login={login} />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div >\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { IntlProvider } from 'react-intl';\nimport messages_fi from './translations/fi.json'\nimport messages_en from './translations/en.json'\nimport { SnackbarProvider } from 'notistack'\n\nconst messages = {\n  'fi': messages_fi,\n  'en': messages_en\n}\nconst language = navigator.language.split(/[-_]/)[0] //language without region code\n\nReactDOM.render(\n  <React.StrictMode>\n    <IntlProvider locale={language} messages={messages[language]}>\n      <SnackbarProvider maxSnack={3} anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }} variant=\"info\">\n        <App />\n      </SnackbarProvider>\n    </IntlProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}